// lib/core/utils/validators.dart

import { required, email, regex } from 'react-admin';

export const validateRequired = required('Este campo √© obrigat√≥rio.');

export const validateEmail = email('Por favor, insira um e-mail v√°lido.');

export const validateCpf = regex(/^\d{3}\.\d{3}\.\d{3}-\d{2}$/, 'Formato de CPF inv√°lido. Use XXX.XXX.XXX-XX.');

export const validatePhone = regex(/^\(\d{2}\)\s\d{4,5}-\d{4}$/, 'Formato de telefone inv√°lido. Use (XX) XXXXX-XXXX.');

export const validateTerms = (value: any) => value ? undefined : 'Voc√™ deve aceitar os termos.';

/**
 * Fun√ß√£o para formata√ß√£o de data ISO para formato brasileiro
 * @param isoDate - Data no formato ISO (yyyy-mm-dd)
 * @returns Data no formato brasileiro (dd/mm/yyyy) ou null se inv√°lida
 */
export const formatDateToBrazilian = (isoDate: string | null | undefined): string | null => {
    // Log de debug para entrada
    console.log('üîÑ [DateFormatter] Formatando data ISO para brasileiro:', {
        input: isoDate,
        type: typeof isoDate
    });

    // Verifica se a data √© v√°lida
    if (!isoDate || typeof isoDate !== 'string') {
        console.log('‚ö†Ô∏è [DateFormatter] Data inv√°lida ou nula:', isoDate);
        return null;
    }

    try {
        // Valida o formato ISO b√°sico (yyyy-mm-dd)
        const isoRegex = /^\d{4}-\d{2}-\d{2}$/;
        if (!isoRegex.test(isoDate)) {
            console.log('‚ùå [DateFormatter] Formato ISO inv√°lido:', isoDate);
            return null;
        }

        // Cria um objeto Date para valida√ß√£o
        const date = new Date(isoDate + 'T00:00:00');

        // Verifica se a data √© v√°lida
        if (isNaN(date.getTime())) {
            console.log('‚ùå [DateFormatter] Data ISO inv√°lida:', isoDate);
            return null;
        }

        // Extrai dia, m√™s e ano
        const day = String(date.getDate()).padStart(2, '0');
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const year = date.getFullYear();

        // Formata para dd/mm/yyyy
        const brazilianDate = `${day}/${month}/${year}`;

        console.log('‚úÖ [DateFormatter] Convers√£o bem-sucedida:', {
            input: isoDate,
            output: brazilianDate,
            parsedDate: date.toISOString().split('T')[0]
        });

        return brazilianDate;

    } catch (error) {
        console.error('‚ùå [DateFormatter] Erro ao formatar data:', error, { input: isoDate });
        return null;
    }
};